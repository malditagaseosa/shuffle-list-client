{"version":3,"sources":["services/api.js","helpers/index.js","pages/Login.js","components/List.js","pages/Home.js","components/UnauthenticatedRoute.js","components/AuthenticatedRoute.js","components/App.js","reportWebVitals.js","index.js"],"names":["Client","_client","Axios","create","baseURL","process","withCredentials","getLists","a","source","get","cancelToken","token","response","status","data","console","log","addListItem","listId","newItem","post","removeListItem","itemIndex","delete","deleteList","createList","login","isEmpty","x","undefined","Login","history","useHistory","React","useState","user","setUser","password","setPassword","isLoading","setIsLoading","logginError","setLogginError","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","sessionStorage","setItem","push","Error","Container","Row","className","Col","xs","md","id","Card","Body","Form","onSubmit","Group","controlId","Label","Control","required","onChange","target","value","type","placeholder","Button","disabled","length","variant","Alert","dismissible","onClose","List","props","apiclient","handleDelete","model","title","items","listItems","setListItems","showItemForm","setShowItemForm","url","itemFormValues","setItemFormValues","handleAddItemToList","Array","isArray","handleRemoveItemFromList","elementIndex","newArray","filter","item","index","Modal","show","onHide","Header","closeButton","Title","Footer","onClick","map","rel","href","Badge","cursor","size","icon","ButtonGroup","Home","lists","setLists","apiClient","handleDeleteList","result","handleNewList","prompt","useEffect","axios","CancelToken","fetchData","cancel","removeItem","sm","UnauthenticatedRoute","children","rest","getItem","to","AuthenticatedRoute","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37ed2db2.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst Client = () => {\r\n    const _client = Axios.create({\r\n        baseURL: process.env.REACT_APP_API_HOST,\r\n        withCredentials: false\r\n    })\r\n\r\n    let getLists = async (source = false) => {\r\n        try {\r\n            let response = await _client.get('', {cancelToken: source.token});            \r\n            if (response.status === 200) {\r\n                return response.data;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    let addListItem = async (listId, newItem) => {\r\n        try {\r\n            let response = await _client.post(`lists/${listId}/items/`, newItem);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    };\r\n    \r\n    let removeListItem = async (listId, itemIndex) => {\r\n        try {\r\n            let response = await _client.delete(`lists/${listId}/items/${itemIndex}`);\r\n            return response.status;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    let deleteList = async (listId) => {\r\n        try {\r\n            let response = await _client.delete(`lists/${listId}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    let createList = async (data) => {\r\n        try {\r\n            let response = await _client.post('lists/', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    let login = async (data) => {\r\n        try {\r\n            let response = await _client.post('login/', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    return {\r\n        getLists,\r\n        addListItem,\r\n        removeListItem,\r\n        deleteList,\r\n        createList,\r\n        login\r\n    };\r\n};\r\n\r\nexport default Client;","/**\r\n * checks if variable is undefined or null or false value\r\n * @param {*} x\r\n */\r\nexport const isEmpty = (x) => {\r\n    return x === undefined || x === null || !x;\r\n}","import React from 'react';\r\nimport Client from '../services/api';\r\nimport { Container, Row, Col, Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isEmpty } from '../helpers';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [user, setUser] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [logginError, setLogginError] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n\r\n  const validateForm = () => user.length > 0 && password.length > 0;\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {      \r\n      let response = await Client().login({ user: user, password: password });      \r\n      if(!isEmpty(response.token)){\r\n        sessionStorage.setItem('token', response.token);        \r\n        history.push('/home');      \r\n      } else {\r\n        throw new Error('User not found');\r\n      }\r\n    } catch (error) {      \r\n      let message = 'An error occurred, please try again';\r\n      setErrorMessage(message);\r\n      setLogginError(true);\r\n      setIsLoading(false);\r\n    }        \r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5\">\r\n        <Col></Col>\r\n        <Col xs={10} md={6}>\r\n          <h1 id=\"login-title\" className=\"text-center mb-3\">Shuffle List</h1>\r\n          <Card className=\"mb-5\">\r\n            <Card.Body>\r\n              <Form onSubmit={ handleSubmit }>\r\n                <Form.Group controlId=\"user\">\r\n                  <Form.Label>user</Form.Label>\r\n                  <Form.Control\r\n                    required \r\n                    onChange={ e => setUser(e.target.value) } \r\n                    type=\"text\" \r\n                    placeholder=\"Enter user\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    onChange={ e => setPassword(e.target.value) }\r\n                    type=\"password\" \r\n                    placeholder=\"Enter password\" />\r\n                </Form.Group>\r\n                <Button disabled={!validateForm()} className=\"mx-auto d-block large\" variant=\"primary\" type=\"submit\">\r\n                  { isLoading ? 'Loading...' : 'Login' }\r\n                </Button>\r\n              </Form>\r\n              { \r\n                logginError \r\n                ? \r\n                  <Alert \r\n                    variant='danger' \r\n                    className='mt-5' \r\n                    dismissible \r\n                    onClose={() => setLogginError(false) }>\r\n                      { errorMessage }\r\n                  </Alert> \r\n                : \r\n                  '' \r\n              }\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Card, Button, ButtonGroup, Badge, Modal, Form } from 'react-bootstrap';\r\nimport Client from '../services/api';\r\nimport { isEmpty } from '../helpers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst List = (props) => {\r\n    let apiclient = Client();\r\n    let { handleDelete } = props;\r\n    let  { title, items, id } = props.model;\r\n    const [listItems, setListItems] = React.useState(items);\r\n    const [showItemForm, setShowItemForm] = React.useState(false);\r\n    const [itemFormValues, setItemFormValues] = React.useState({title: '', url: ''});\r\n    const handleAddItemToList = async () => {\r\n        try {\r\n            setShowItemForm(true);\r\n            let items = await apiclient.addListItem(id, itemFormValues);\r\n            items = isEmpty(items) || !Array.isArray(items) ? [] : items;\r\n            setListItems(items);\r\n            setShowItemForm(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    };\r\n    const handleRemoveItemFromList = async (elementIndex) => {\r\n        try {\r\n            let result = await apiclient.removeListItem(id, elementIndex);\r\n            if (result === 200) {\r\n                let newArray =  listItems.filter((item, index) => { return index !== elementIndex })             \r\n                setListItems(newArray);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Modal show={showItemForm} onHide={ () => { setShowItemForm(false) } }>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Element</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            onChange={ e => setItemFormValues({...itemFormValues, title: e.target.value}) }                            \r\n                            type=\"text\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"url\">\r\n                        <Form.Label>Url</Form.Label>\r\n                        <Form.Control\r\n                            onChange={ e => setItemFormValues({...itemFormValues, url: e.target.value}) }                           \r\n                            type=\"text\" />\r\n                    </Form.Group>   \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={ () => { setShowItemForm(false) } }>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={ handleAddItemToList }>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Card.Title className=\"pt-3 pl-3 pb-0\">{ title }</Card.Title>            \r\n            <Card.Body>                \r\n                { listItems.map((item, index) => \r\n                {\r\n                    if (item.url) {\r\n                        return (<a rel=\"noreferrer\" target=\"_blank\" href={item.url} key={index}><Badge className=\"px-2 py-2 my-1 mx-1\" variant=\"info\">{item.title}&nbsp;<FontAwesomeIcon cursor=\"pointer\" onClick={ () => { handleRemoveItemFromList(index) } } className=\"ml-2 mr-1\" size=\"xs\" icon={ ['fas', 'trash'] } /></Badge></a>);\r\n                    }\r\n\r\n                    return (<Badge key={index} className=\"px-2 py-2 my-1 mx-1 text-break\" variant=\"dark\">{item.title}&nbsp;<FontAwesomeIcon cursor=\"pointer\" onClick={ () => { handleRemoveItemFromList(index) } } className=\"ml-2 mr-1\" size=\"xs\" icon={ ['fas', 'trash'] } /></Badge>)\r\n                }) }                \r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <ButtonGroup>\r\n                    <Button onClick={ () => { setShowItemForm(true) } } variant=\"primary\">\r\n                        <FontAwesomeIcon icon={ ['fas', 'plus'] }></FontAwesomeIcon>\r\n                    </Button>\r\n                    <Button variant=\"success\">\r\n                        <FontAwesomeIcon icon={ ['fas', 'random'] } />\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={ () => { handleDelete(id) } } >\r\n                        <FontAwesomeIcon icon={ ['fas', 'trash'] } />\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport List from '../components/List';\r\nimport { Container, Row, Col, Alert, Button } from 'react-bootstrap';\r\nimport Client from '../services/api';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  let history = useHistory();\r\n  const [lists, setLists] = React.useState([]);\r\n  const apiClient = Client();\r\n\r\n  const handleDeleteList = async (listId) => {\r\n    try {\r\n        let result = await apiClient.deleteList(listId);\r\n        if (result !== undefined && result) {\r\n          setLists(lists.filter(item => item.id !== listId));\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n  }\r\n  const handleNewList = async () => {\r\n    let title = prompt(\"¿Cual es el titulo de la lista?\");\r\n    try {\r\n      if (title) {\r\n        let result = await apiClient.createList({title});      \r\n        if (result) {        \r\n          setLists([...lists, {id: result, title, items: []}]);\r\n        }\r\n      }      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem('token');\r\n    history.push('/login');\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    let fetchData = async () => {    \r\n      let data = await Client().getLists(source);\r\n      data = (Array.isArray(data)) ? data : [];\r\n      setLists(data);      \r\n    }\r\n    fetchData();\r\n    return () => { source.cancel() };\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"mt-4 mb-5\">\r\n      <Row>\r\n        <Col xs={12} md={2}>\r\n          <Button onClick={ handleNewList } className=\"mt-3\" variant=\"success\">Nueva lista</Button>\r\n          <br></br>\r\n          <Button onClick={ handleLogout } className=\"mt-3\" variant=\"danger\">Salir</Button>\r\n        </Col>\r\n        <Col xs={12} md={10}>\r\n          <Row>\r\n            { lists.map((item) => {\r\n              return (\r\n                <Col className=\"mb-3 mt-3\" key={item.id} xs={12} md={12} sm={12}>\r\n                  <List handleDelete={ handleDeleteList } model={item} />\r\n                </Col>\r\n              )\r\n            }) }\r\n            { lists.length > 0 \r\n              ? \"\" \r\n              : <Alert className=\"center mx-auto\" variant=\"danger\">\r\n                  No se han encontrado listas para mostrar\r\n                </Alert> \r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isEmpty } from '../helpers';\r\n\r\nconst UnauthenticatedRoute = ({ children, ...rest }) => {   \r\n    let token = sessionStorage.getItem('token');\r\n    return (\r\n        <Route {...rest}>\r\n            {\r\n                isEmpty(token)\r\n                ?\r\n                    (children)\r\n                :\r\n                    (<Redirect to=\"/home\" />)\r\n            }\r\n        </Route>     \r\n    );\r\n}\r\n\r\nexport default UnauthenticatedRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isEmpty } from '../helpers';\r\n\r\nconst AuthenticatedRoute = ({ children, ...rest }) => { \r\n\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    return (\r\n        <Route {...rest}>\r\n            {\r\n                !isEmpty(token) && token\r\n                ?\r\n                    (children)\r\n                :\r\n                    (<Redirect to=\"/login\" />)\r\n            }\r\n        </Route>     \r\n    );\r\n}\r\n\r\nexport default AuthenticatedRoute;","import React from 'react';\nimport Login from '../pages/Login'\nimport { HashRouter as Router, Switch } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport UnauthenticatedRoute from '../components/UnauthenticatedRoute';\nimport AuthenticatedRoute from '../components/AuthenticatedRoute';\nimport '../styles/App.css';\n\nconst App = () => {\n  return (\n    <Router>      \n      <Switch>        \n        <UnauthenticatedRoute exact path={ ['/', '/login'] }>          \n          <Login />\n        </UnauthenticatedRoute>\n        <AuthenticatedRoute exact path=\"/home\">\n          <Home />\n        </AuthenticatedRoute>\n      </Switch>\n    </Router>    \n  )\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'; \r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(fas);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />   \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}