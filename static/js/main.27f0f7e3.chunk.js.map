{"version":3,"sources":["services/api.js","components/List.js","components/App.js","reportWebVitals.js","index.js"],"names":["Client","_client","Axios","create","baseURL","process","withCredentials","getLists","a","source","get","cancelToken","token","response","status","data","console","log","addListItem","listId","newItem","post","removeListItem","itemIndex","delete","deleteList","createList","List","props","apiclient","handleDelete","model","title","items","id","React","useState","listItems","setListItems","showItemForm","setShowItemForm","url","itemFormValues","setItemFormValues","handleAddItemToList","result","handleRemoveItemFromList","elementIndex","newArray","filter","item","index","Card","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","onChange","e","target","value","type","Footer","Button","variant","onClick","className","map","Badge","cursor","size","icon","ButtonGroup","App","lists","setLists","apiClient","handleDeleteList","undefined","handleNewList","prompt","useEffect","axios","CancelToken","Array","isArray","fetchData","cancel","Container","Row","Col","xs","md","sm","length","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27f0f7e3.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst Client = () => {\r\n    const _client = Axios.create({\r\n        baseURL: process.env.REACT_APP_API_HOST,\r\n        withCredentials: false\r\n    })\r\n\r\n    let getLists = async (source = false) => {\r\n        try {\r\n            let response = await _client.get('', {cancelToken: source.token});            \r\n            if (response.status === 200) {\r\n                return response.data;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    let addListItem = async (listId, newItem) => {\r\n        try {\r\n            let response = await _client.post(`lists/${listId}/items/`, newItem);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    };\r\n    \r\n    let removeListItem = async (listId, itemIndex) => {\r\n        try {\r\n            let response = await _client.delete(`lists/${listId}/items/${itemIndex}`);\r\n            return response.status;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    let deleteList = async (listId) => {\r\n        try {\r\n            let response = await _client.delete(`lists/${listId}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    let createList = async (data) => {\r\n        try {\r\n            let response = await _client.post('lists/', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    } \r\n\r\n\r\n    return {\r\n        getLists,\r\n        addListItem,\r\n        removeListItem,\r\n        deleteList,\r\n        createList\r\n    };\r\n};\r\n\r\nexport default Client;","import React from 'react';\r\nimport { Card, Button, ButtonGroup, Badge, Modal, Form } from 'react-bootstrap';\r\nimport Client from '../services/api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst List = (props) => {\r\n    let apiclient = Client();\r\n    let { handleDelete } = props;\r\n    let  { title, items, id } = props.model;\r\n    const [listItems, setListItems] = React.useState(items);\r\n    const [showItemForm, setShowItemForm] = React.useState(false);\r\n    const [itemFormValues, setItemFormValues] = React.useState({title: '', url: ''});\r\n    const handleAddItemToList = async () => {\r\n        try {\r\n            setShowItemForm(true);\r\n            let result = await apiclient.addListItem(id, itemFormValues);\r\n            setListItems(result);\r\n            setShowItemForm(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    };\r\n    const handleRemoveItemFromList = async (elementIndex) => {\r\n        try {\r\n            let result = await apiclient.removeListItem(id, elementIndex);\r\n            if (result === 200) {\r\n                let newArray =  listItems.filter((item, index) => { return index !== elementIndex })             \r\n                setListItems(newArray);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Modal show={showItemForm} onHide={ () => { setShowItemForm(false) } }>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Element</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            onChange={ e => setItemFormValues({...itemFormValues, title: e.target.value}) }                            \r\n                            type=\"text\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"url\">\r\n                        <Form.Label>Url</Form.Label>\r\n                        <Form.Control\r\n                            onChange={ e => setItemFormValues({...itemFormValues, url: e.target.value}) }                           \r\n                            type=\"text\" />\r\n                    </Form.Group>   \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={ () => { setShowItemForm(false) } }>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={ handleAddItemToList }>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Card.Title className=\"pt-3 pl-3 pb-0\">{ title }</Card.Title>            \r\n            <Card.Body>                \r\n                { listItems.map((item, index) => {\r\n                    return (<Badge key={index} className=\"px-2 py-2 my-1 mx-1\" variant=\"dark\">{item.title}&nbsp;<FontAwesomeIcon cursor=\"pointer\" onClick={ () => { handleRemoveItemFromList(index) } } className=\"ml-2 mr-1\" size=\"xs\" icon={ ['fas', 'trash'] } /></Badge>)\r\n                }) }                \r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <ButtonGroup>\r\n                    <Button onClick={ () => { setShowItemForm(true) } } variant=\"primary\">\r\n                        <FontAwesomeIcon icon={ ['fas', 'plus'] }></FontAwesomeIcon>\r\n                    </Button>\r\n                    <Button variant=\"success\">\r\n                        <FontAwesomeIcon icon={ ['fas', 'random'] } />\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={ () => { handleDelete(id) } } >\r\n                        <FontAwesomeIcon icon={ ['fas', 'trash'] } />\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default List;","import React from 'react';\nimport '../styles/App.css';\nimport List from './List';\nimport { Container, Row, Col, Alert, Button } from 'react-bootstrap';\nimport Client from '../services/api';\nimport axios from 'axios';\n\nconst App = () => {\n\n  const [lists, setLists] = React.useState([]);\n  const apiClient = Client();\n\n  const handleDeleteList = async (listId) => {\n    try {\n        let result = await apiClient.deleteList(listId);\n        if (result !== undefined && result) {\n          setLists(lists.filter(item => item.id !== listId));\n        }\n    } catch (error) {\n        console.log(error);\n    }\n  }\n  const handleNewList = async () => {\n    let title = prompt(\"¿Cual es el titulo de la lista?\");\n    try {\n      if (title) {\n        let result = await apiClient.createList({title});      \n        if (result) {        \n          setLists([...lists, {id: result, title, items: []}]);\n        }\n      }      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  React.useEffect(() => {\n    const source = axios.CancelToken.source();\n    let fetchData = async () => {    \n      let data = await Client().getLists(source);\n      data = (Array.isArray(data)) ? data : [];\n      setLists(data);      \n    }\n    fetchData();\n    return () => { source.cancel() };\n  }, []);\n\n  return (\n    <Container className=\"mt-4\">\n      <Row>\n        <Col xs={12} md={2}>\n          <Button onClick={ handleNewList } className=\"mt-3\" variant=\"success\">Nueva lista</Button>\n        </Col>\n        <Col xs={12} md={10}>\n          <Row>\n            { lists.map((item) => {\n              return (\n                <Col className=\"mb-3 mt-3\" key={item.id} xs={12} md={12} sm={12}>\n                  <List handleDelete={ handleDeleteList } model={item} />\n                </Col>\n              )\n            }) }\n            { lists.length > 0 \n              ? \"\" \n              : <Alert className=\"center mx-auto\" variant=\"danger\">\n                  No se han encontrado listas para mostrar\n                </Alert> \n            }\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/index.css';\r\n\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'; \r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(fas);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}